% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coin2COIN.R
\name{coin_to_COIN}
\alias{coin_to_COIN}
\title{Convert coin class to COIN}
\usage{
coin_to_COIN(coin, recover_dsets = FALSE, out2 = "COIN")
}
\arguments{
\item{coin}{A "coin" class object from the COINr package (> v1.0)}

\item{recover_dsets}{If \code{FALSE} (default) will only extract the raw data and assemble a COIN. If \code{TRUE}, will also recover all datasets. See details.}

\item{out2}{Either \code{"COIN"} (default) to output an assembled COIN, or else \code{"list"} to output a list with the \code{IndData}, \code{IndMeta} and \code{AggMeta} data frames in COINr6 format.}
}
\value{
A "COIN" class object or a list of dataframes, depending on \code{out2}.
}
\description{
Converts a newer format "coin" s3 class object from COINr > v1.0 to the older format "COIN" class compatible with COINr6. This is essentially used for importing
coins from COINr to use some of the visualisation tools in COINr6 which were not carried over to the new format, e.g. interactive plots etc.
}
\details{
A coin cannot be perfectly converted to a COIN because both COINs and coins store the functions used in their creation in the \code{.$Method} and \code{.$Log} sub-lists respectively.
Since the syntax and functionality of COINr6 and COINr is quite different, it is not possible to recreate the Method from Log or vice versa. This means that a COIN created
by converting from a coin will not be able to be regenerated which means \code{\link[=regen]{regen()}}, \code{\link[=sensitivity]{sensitivity()}} and any other functions involving regeneration will not work.

The intended use of this conversion function is therefore either (a) to convert without recovering data sets, then use COINr6 syntax to build datasets, with full functionality
of COINr6, or (b) to convert and recover all data sets, but use COINr6 more in a read-only mode, e.g. just for plotting, using the apps like \code{\link[=resultsDash]{resultsDash()}} and \code{\link[=indDash]{indDash()}} etc.
}
\examples{
# note ASEM_newcoin is a built in new-format coin object
COIN <- coin_to_COIN(ASEM_newcoin, recover_dsets = TRUE)
}
